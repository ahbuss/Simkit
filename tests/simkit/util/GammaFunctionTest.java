/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simkit.util;

import static java.lang.StrictMath.PI;
import static java.lang.StrictMath.abs;
import static java.lang.StrictMath.round;
import static java.lang.StrictMath.sqrt;
import junit.framework.TestCase;

/**
 *
 * @author ahbuss
 */
public class GammaFunctionTest extends TestCase {

    /**
     * Absolute or relative error of 1.0E-8
     */
    public static final double EPSILON = 1.0E-8;

    /**
     * These values were computed using an online calculator that presumably
     * provides accurate values. 
     * (see <a href=http://keisan.casio.com/exec/system/1180573443">
     * Gamma function (chart) Calculator </a>)
     */
    private static final double[][] TEST_VALUES
            = new double[][]{
                {0.05, 19.4700853},
                {0.1, 9.5135077},
                {0.15, 6.22027287},
                {0.2, 4.590843712},
                {0.25, 3.62560991},
                {0.3, 2.99156899},
                {0.35, 2.546146977},
                {0.4, 2.218159544},
                {0.45, 1.9681364},
                {0.5, 1.772453851},
                {0.55, 1.61612427},
                {0.6, 1.489192249},
                {0.65, 1.3847951},
                {0.7, 1.298055333},
                {0.75, 1.2254167},
                {0.8, 1.164229714},
                {0.85, 1.112483737},
                {0.9, 1.0686287},
                {0.95, 1.03145332},
                {1, 1},
                {1.05, 0.973504266},
                {1.1, 0.95135077},
                {1.15, 0.933040931},
                {1.2, 0.918168742},
                {1.25, 0.906402477},
                {1.3, 0.897470696},
                {1.35, 0.891151442},
                {1.4, 0.887263818},
                {1.45, 0.88566138},
                {1.5, 0.886226925},
                {1.55, 0.88886835},
                {1.6, 0.893515349},
                {1.65, 0.90011682},
                {1.7, 0.908638733},
                {1.75, 0.91906253},
                {1.8, 0.931383771},
                {1.85, 0.945611176},
                {1.9, 0.961765832},
                {1.95, 0.979880651},
                {2, 1},
                {2.05, 1.022179479},
                {2.1, 1.046485847},
                {2.15, 1.072997071},
                {2.2, 1.101802491},
                {2.25, 1.133003096},
                {2.3, 1.166711905},
                {2.35, 1.203054447},
                {2.4, 1.242169345},
                {2.45, 1.284209001},
                {2.5, 1.329340388},
                {2.55, 1.37774594},
                {2.6, 1.429624559},
                {2.65, 1.48519275},
                {2.7, 1.544685846},
                {2.75, 1.60835942},
                {2.8, 1.676490788},
                {2.85, 1.749380676},
                {2.9, 1.827355081},
                {2.95, 1.91076727},
                {3, 2},
                {3.05, 2.095467932},
                {3.1, 2.19762028},
                {3.15, 2.3069437},
                {3.2, 2.42396548},
                {3.25, 2.54925697},
                {3.3, 2.68343738},
                {3.35, 2.82717795},
                {3.4, 2.981206427},
                {3.45, 3.14631205},
                {3.5, 3.32335097},
                {3.55, 3.51325214},
                {3.6, 3.71702385},
                {3.65, 3.93576078},
                {3.7, 4.17065178},
                {3.75, 4.42298841},
                {3.8, 4.69417421},
                {3.85, 4.98573493},
                {3.9, 5.29932973},
                {3.95, 5.636763446},
                {4, 6},
                {4.05, 6.39117719},
                {4.1, 6.81262286},
                {4.15, 7.26687266},
                {4.2, 7.756689536},
                {4.25, 8.28508514},
                {4.3, 8.85534336},
                {4.35, 9.47104613},
                {4.4, 10.13610185},
                {4.45, 10.85477658},
                {4.5, 11.6317284},
                {4.55, 12.4720451},
                {4.6, 13.3812859},
                {4.65, 14.3655268},
                {4.7, 15.4314116},
                {4.75, 16.5862065},
                {4.8, 17.837862},
                {4.85, 19.1950795},
                {4.9, 20.667386},
                {4.95, 22.2652156},
                {5, 24},
                {10, 362880},
                {10.05, 406177.826},
                {10.1, 454760.751},
                {10.15, 509287.171},
                {10.2, 570499.028},
                {10.25, 639232.6},
                {10.3, 716430.689},
                {10.35, 803156.43},
                {10.4, 900608.9},
                {10.45, 1010140.787},
                {10.5, 1133278.39},
                {10.55, 1271744.27},
                {10.6, 1427482.92},
                {10.65, 1602689.75},
                {10.7, 1799844.08},
                {10.75, 2021746.35},
                {10.8, 2271560.42},
                {10.85, 2552861.47},
                {10.9, 2869690.27},
                {10.95, 3226614.78},
                {11, 3628800},
                {11.05, 4082087.15},
                {11.1, 4593083.6},
                {11.15, 5169264.784},
                {11.2, 5819090.1},
                {11.25, 6552134.14},
                {11.3, 7379236.1},
                {11.35, 8312669.07},
                {11.4, 9366332.6},
                {11.45, 10555971.22},
                {11.5, 11899423.1},
                {11.55, 13416902.09},
                {11.6, 15131318.92},
                {11.65, 17068645.9},
                {11.7, 19258331.6},
                {11.75, 21733773.3},
                {11.8, 24532852.6},
                {11.85, 27698546.9},
                {11.9, 31279623.9},
                {11.95, 35331432},
                {12, 39916800},
                {12.05, 45107063},
                {12.1, 50983227.8},
                {12.15, 57637302.34},
                {12.2, 65173809},
                {12.25, 73711509},
                {12.3, 83385367.9},
                {12.35, 94348794},
                {12.4, 106776191.5},
                {12.45, 120865871},
                {12.5, 136843365},
                {12.55, 154965219},
                {12.6, 175523299},
                {12.65, 198849724},
                {12.7, 225322480.2},
                {12.75, 255371836},
                {12.8, 289487660},
                {12.85, 328227780},
                {12.9, 372227525},
                {12.95, 422210610},
                {13, 479001600},
                {13.05, 543540110},
                {13.1, 616897057},
                {13.15, 700293220},
                {13.2, 795120469},
                {13.25, 902965990},
                {13.3, 1025640025},
                {13.35, 1165207610},
                {13.4, 1324024770},
                {13.45, 1504780090},
                {13.5, 1710542070},
                {13.55, 1944813500},
                {13.6, 2211593570.0},
                {13.65, 2515449010.0},
                {13.7, 2861595500.0},
                {13.75, 3255990905.0},
                {13.8, 3705442050.0},
                {13.85, 4217726990.0},
                {13.9, 4801735068.0},
                {13.95, 5467627410.0},
                {14, 6227020800.0},
                {14.05, 7093198400.0},
                {14.1, 8081351450.0},
                {14.15, 9208855900.0},
                {14.2, 10495590200.0},
                {14.25, 11964299300.0},
                {14.3, 13641012300.0},
                {14.35, 15555521500.0},
                {14.4, 17741932000.0},
                {14.45, 20239292200.0},
                {14.5, 23092317900.0},
                {14.55, 26352222920.0},
                {14.6, 30077672600.0},
                {14.65, 34335879000.0},
                {14.7, 39203858300.0},
                {14.75, 44769874900.0},
                {14.8, 51135100300.0},
                {14.85, 58415519000.0},
                {14.9, 66744117400.0},
                {14.95, 76273402000.0},
                {15.0, 87178291200.0}
            };

    public GammaFunctionTest(String testName) {
        super(testName);
    }

    @Override
    protected void setUp() throws Exception {
        super.setUp();
    }

    @Override
    protected void tearDown() throws Exception {
        super.tearDown();
    }

    /**
     * Test of gamma method, of class GammaFunction.
     */
    public void testGamma() {
        System.out.println("gamma");
        double expResult = 1.0;

//        Check integer values from 1 through 18
        for (int x = 1; x < 18; ++x) {
            expResult *= x == 1 ? 1 : (x - 1);
            double result = round(GammaFunction.gamma(x));
            assertEquals(expResult, result, EPSILON);
        }
//        Check Gamma(1/2) = sqrt(pi)
        double x = 0.5;
        expResult = sqrt(PI);
        double result = GammaFunction.gamma(x);
        assertEquals(expResult, result, EPSILON); // Gamma(1/2) = sqrt(pi)

        double relative = 0.0;
//        Test values between 0.05 and 5
        for (int i = 0; i < TEST_VALUES.length; ++i) {
            x = TEST_VALUES[i][0];
            expResult = TEST_VALUES[i][1];
            result = GammaFunction.gamma(x);
            relative = abs(result - expResult)/expResult;
            assertEquals(relative, 0.0, EPSILON);
        }
    }

    /**
     * Note: since exp(logGamma(x)) is used to compute gamma(x), the tests for
     * gamma(x) should be sufficient. Test of logGamma method, of class
     * GammaFunction.
     */
    public void testLogGamma() {
        System.out.println("logGamma");
        double x = 0.0;
        double expResult = 0.0;
        double result = GammaFunction.logGamma(x);
//        assertEquals(expResult, result, 0.0);
        // TODO review the generated test code and remove the default call to fail.
//        fail("The test case is a prototype.");
    }

}
