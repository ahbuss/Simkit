//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.04.02 at 03:27:54 PST 
//


package simkit.xsd.bindings.assembly.impl;

public class SimkitAssemblyTypeImpl implements simkit.xsd.bindings.assembly.SimkitAssemblyType, com.sun.xml.bind.JAXBObject, simkit.xsd.bindings.assembly.impl.runtime.UnmarshallableObject, simkit.xsd.bindings.assembly.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, simkit.xsd.bindings.assembly.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _SimEventListenerConnection = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _PropertyChangeListener = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Version;
    protected com.sun.xml.bind.util.ListImpl _Output = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _PropertyChangeListenerConnection = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _SimEntity = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (simkit.xsd.bindings.assembly.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (simkit.xsd.bindings.assembly.SimkitAssemblyType.class);
    }

    public java.util.List getSimEventListenerConnection() {
        return _SimEventListenerConnection;
    }

    public java.util.List getPropertyChangeListener() {
        return _PropertyChangeListener;
    }

    public java.lang.String getVersion() {
        return _Version;
    }

    public void setVersion(java.lang.String value) {
        _Version = value;
    }

    public java.util.List getOutput() {
        return _Output;
    }

    public java.util.List getPropertyChangeListenerConnection() {
        return _PropertyChangeListenerConnection;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getSimEntity() {
        return _SimEntity;
    }

    public simkit.xsd.bindings.assembly.impl.runtime.UnmarshallingEventHandler createUnmarshaller(simkit.xsd.bindings.assembly.impl.runtime.UnmarshallingContext context) {
        return new simkit.xsd.bindings.assembly.impl.SimkitAssemblyTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(simkit.xsd.bindings.assembly.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _SimEventListenerConnection.size();
        int idx2 = 0;
        final int len2 = _PropertyChangeListener.size();
        int idx4 = 0;
        final int len4 = _Output.size();
        int idx5 = 0;
        final int len5 = _PropertyChangeListenerConnection.size();
        int idx7 = 0;
        final int len7 = _SimEntity.size();
        while (idx7 != len7) {
            if (_SimEntity.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SimEntity.get(idx7 ++)), "SimEntity");
            } else {
                context.startElement("", "SimEntity");
                int idx_0 = idx7;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SimEntity.get(idx_0 ++)), "SimEntity");
                context.endNamespaceDecls();
                int idx_1 = idx7;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SimEntity.get(idx_1 ++)), "SimEntity");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SimEntity.get(idx7 ++)), "SimEntity");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_PropertyChangeListener.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PropertyChangeListener.get(idx2 ++)), "PropertyChangeListener");
            } else {
                context.startElement("", "PropertyChangeListener");
                int idx_2 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PropertyChangeListener.get(idx_2 ++)), "PropertyChangeListener");
                context.endNamespaceDecls();
                int idx_3 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PropertyChangeListener.get(idx_3 ++)), "PropertyChangeListener");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PropertyChangeListener.get(idx2 ++)), "PropertyChangeListener");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_SimEventListenerConnection.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SimEventListenerConnection.get(idx1 ++)), "SimEventListenerConnection");
            } else {
                context.startElement("", "SimEventListenerConnection");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SimEventListenerConnection.get(idx_4 ++)), "SimEventListenerConnection");
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SimEventListenerConnection.get(idx_5 ++)), "SimEventListenerConnection");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SimEventListenerConnection.get(idx1 ++)), "SimEventListenerConnection");
                context.endElement();
            }
        }
        while (idx5 != len5) {
            if (_PropertyChangeListenerConnection.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PropertyChangeListenerConnection.get(idx5 ++)), "PropertyChangeListenerConnection");
            } else {
                context.startElement("", "PropertyChangeListenerConnection");
                int idx_6 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PropertyChangeListenerConnection.get(idx_6 ++)), "PropertyChangeListenerConnection");
                context.endNamespaceDecls();
                int idx_7 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PropertyChangeListenerConnection.get(idx_7 ++)), "PropertyChangeListenerConnection");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PropertyChangeListenerConnection.get(idx5 ++)), "PropertyChangeListenerConnection");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            if (_Output.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Output.get(idx4 ++)), "Output");
            } else {
                context.startElement("", "Output");
                int idx_8 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Output.get(idx_8 ++)), "Output");
                context.endNamespaceDecls();
                int idx_9 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Output.get(idx_9 ++)), "Output");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Output.get(idx4 ++)), "Output");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(simkit.xsd.bindings.assembly.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _SimEventListenerConnection.size();
        int idx2 = 0;
        final int len2 = _PropertyChangeListener.size();
        int idx4 = 0;
        final int len4 = _Output.size();
        int idx5 = 0;
        final int len5 = _PropertyChangeListenerConnection.size();
        int idx7 = 0;
        final int len7 = _SimEntity.size();
        context.startAttribute("", "name");
        try {
            context.text(context.onID(this, ((java.lang.String) _Name)), "Name");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.assembly.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "version");
        try {
            context.text(((java.lang.String) _Version), "Version");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.assembly.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx7 != len7) {
            if (_SimEntity.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SimEntity.get(idx7 ++)), "SimEntity");
            } else {
                idx7 += 1;
            }
        }
        while (idx2 != len2) {
            if (_PropertyChangeListener.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PropertyChangeListener.get(idx2 ++)), "PropertyChangeListener");
            } else {
                idx2 += 1;
            }
        }
        while (idx1 != len1) {
            if (_SimEventListenerConnection.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SimEventListenerConnection.get(idx1 ++)), "SimEventListenerConnection");
            } else {
                idx1 += 1;
            }
        }
        while (idx5 != len5) {
            if (_PropertyChangeListenerConnection.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PropertyChangeListenerConnection.get(idx5 ++)), "PropertyChangeListenerConnection");
            } else {
                idx5 += 1;
            }
        }
        while (idx4 != len4) {
            if (_Output.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Output.get(idx4 ++)), "Output");
            } else {
                idx4 += 1;
            }
        }
    }

    public void serializeURIs(simkit.xsd.bindings.assembly.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _SimEventListenerConnection.size();
        int idx2 = 0;
        final int len2 = _PropertyChangeListener.size();
        int idx4 = 0;
        final int len4 = _Output.size();
        int idx5 = 0;
        final int len5 = _PropertyChangeListenerConnection.size();
        int idx7 = 0;
        final int len7 = _SimEntity.size();
        while (idx7 != len7) {
            if (_SimEntity.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SimEntity.get(idx7 ++)), "SimEntity");
            } else {
                idx7 += 1;
            }
        }
        while (idx2 != len2) {
            if (_PropertyChangeListener.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PropertyChangeListener.get(idx2 ++)), "PropertyChangeListener");
            } else {
                idx2 += 1;
            }
        }
        while (idx1 != len1) {
            if (_SimEventListenerConnection.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SimEventListenerConnection.get(idx1 ++)), "SimEventListenerConnection");
            } else {
                idx1 += 1;
            }
        }
        while (idx5 != len5) {
            if (_PropertyChangeListenerConnection.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PropertyChangeListenerConnection.get(idx5 ++)), "PropertyChangeListenerConnection");
            } else {
                idx5 += 1;
            }
        }
        while (idx4 != len4) {
            if (_Output.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Output.get(idx4 ++)), "Output");
            } else {
                idx4 += 1;
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Name);
    }

    public java.lang.Class getPrimaryInterface() {
        return (simkit.xsd.bindings.assembly.SimkitAssemblyType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000f\u0080\u0005\u00e1ppsq\u0000~\u0000\u0000\r\u009a\u00f3\u00d1ppsq\u0000~\u0000\u0000\u000b"
+"U.Sppsq\u0000~\u0000\u0000\u0007\u00feX\u0006ppsq\u0000~\u0000\u0000\u0006e0kppsq\u0000~\u0000\u0000\u0003\u00b3\u0094\u00cappsr\u0000 com.sun.msv.gra"
+"mmar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002<)hppsr\u0000\u001dcom.sun.msv.grammar.Ch"
+"oiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002<)eppsr\u0000\'com.sun.msv.grammar.trex.E"
+"lementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/"
+"NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aig"
+"noreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000:\u00c9`pp\u0000sq\u0000"
+"~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuex"
+"p\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"
+"\u0002L\u0000\tnameClassq\u0000~\u0000\u0011xq\u0000~\u0000\u0003\u0000:\u00c9Gq\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0016\u0001psr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001cpsr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000&simkit.xsd.bindings"
+".assembly.SimEntityt\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000\u0010\u0002\u0001`\u0003pp\u0000sq\u0000~\u0000\u0000\u0002\u0001_\u00f8ppsq\u0000~\u0000\u0010\u0000:\u00c9`pp\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000"
+"\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000*simkit.xs"
+"d.bindings.assembly.SimEntityTypeq\u0000~\u0000&sq\u0000~\u0000\u000e\u0001\u00c6\u0096\u0093ppsq\u0000~\u0000\u0018\u0001\u00c6\u0096\u0088"
+"q\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg"
+"/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/"
+"msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00f1\u008e\u009eppsr\u0000\"com.sun.msv.datatype.xsd"
+".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAto"
+"micType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar."
+"Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0017psr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fnam"
+"espaceURIq\u0000~\u0000#xpq\u0000~\u0000<q\u0000~\u0000;sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http://www.w3.org/"
+"2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\tSimEntityt\u0000\u0000sq\u0000~\u0000\u000e\u0001wk]p"
+"psq\u0000~\u0000\u000b\u0001wkRq\u0000~\u0000\u0017psq\u0000~\u0000\u000e\u0001wkOq\u0000~\u0000\u0017psq\u0000~\u0000\u0010\u0000:\u00c9`q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u000e\u0000:\u00c9U"
+"ppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003si"
+"mkit.xsd.bindings.assembly.PropertyChangeListenerq\u0000~\u0000&sq\u0000~\u0000\u0010"
+"\u0001<\u00a1\u00edq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001<\u00a1\u00e2ppsq\u0000~\u0000\u0010\u0000:\u00c9`pp\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000"
+"~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007simkit.xsd.bindi"
+"ngs.assembly.PropertyChangeListenerTypeq\u0000~\u0000&sq\u0000~\u0000\u000e\u0001\u0001\u00d8}ppsq\u0000~"
+"\u0000\u0018\u0001\u0001\u00d8rq\u0000~\u0000\u0017pq\u0000~\u00004sq\u0000~\u0000\"q\u0000~\u0000Eq\u0000~\u0000Fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0016PropertyChang"
+"eListenerq\u0000~\u0000Iq\u0000~\u0000!sq\u0000~\u0000\u000e\u0002\u00b1\u009b\u009cppsq\u0000~\u0000\u000b\u0002\u00b1\u009b\u0091q\u0000~\u0000\u0017psq\u0000~\u0000\u000e\u0002\u00b1\u009b\u008eq\u0000~"
+"\u0000\u0017psq\u0000~\u0000\u0010\u0000:\u00c9`q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000"
+"~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007simkit.xsd.bindings.assembly.Sim"
+"EventListenerConnectionq\u0000~\u0000&sq\u0000~\u0000\u0010\u0002v\u00d2,q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002v\u00d2!ppsq\u0000"
+"~\u0000\u0010\u0000:\u00c9`pp\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000;simkit.xsd.bindings.assembly.SimEventListe"
+"nerConnectionTypeq\u0000~\u0000&sq\u0000~\u0000\u000e\u0002<\b\u00bcppsq\u0000~\u0000\u0018\u0002<\b\u00b1q\u0000~\u0000\u0017pq\u0000~\u00004sq\u0000~\u0000"
+"\"q\u0000~\u0000Eq\u0000~\u0000Fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u001aSimEventListenerConnectionq\u0000~\u0000Iq\u0000~\u0000"
+"!sq\u0000~\u0000\u000e\u0001\u0099\'\u0096ppsq\u0000~\u0000\u000b\u0001\u0099\'\u008bq\u0000~\u0000\u0017psq\u0000~\u0000\u000e\u0001\u0099\'\u0088q\u0000~\u0000\u0017psq\u0000~\u0000\u0010\u0000:\u00c9`q\u0000~\u0000\u0017"
+"p\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000"
+"!sq\u0000~\u0000\"t\u0000=simkit.xsd.bindings.assembly.PropertyChangeListene"
+"rConnectionq\u0000~\u0000&sq\u0000~\u0000\u0010\u0001^^&q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001^^\u001bppsq\u0000~\u0000\u0010\u0000:\u00c9`pp\u0000sq"
+"\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"t\u0000Asimkit.xsd.bindings.assembly.PropertyChangeListenerCon"
+"nectionTypeq\u0000~\u0000&sq\u0000~\u0000\u000e\u0001#\u0094\u00b6ppsq\u0000~\u0000\u0018\u0001#\u0094\u00abq\u0000~\u0000\u0017pq\u0000~\u00004sq\u0000~\u0000\"q\u0000~\u0000E"
+"q\u0000~\u0000Fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000 PropertyChangeListenerConnectionq\u0000~\u0000Iq\u0000~\u0000"
+"!sq\u0000~\u0000\u000e\u0003V\u00d6Hppsq\u0000~\u0000\u000b\u0003V\u00d6=q\u0000~\u0000\u0017psq\u0000~\u0000\u000e\u0003V\u00d6:q\u0000~\u0000\u0017psq\u0000~\u0000\u0010\u0000:\u00c9`q\u0000~\u0000\u0017"
+"p\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017psq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000"
+"!sq\u0000~\u0000\"t\u0000#simkit.xsd.bindings.assembly.Outputq\u0000~\u0000&sq\u0000~\u0000\u0010\u0003\u001c\f\u00d8"
+"q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0003\u001c\f\u00cdppsq\u0000~\u0000\u0010\u0000:\u00c9`pp\u0000sq\u0000~\u0000\u000e\u0000:\u00c9Uppsq\u0000~\u0000\u000b\u0000:\u00c9Jq\u0000~\u0000\u0017p"
+"sq\u0000~\u0000\u0018\u0000:\u00c9Gq\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\'simkit.xsd.bindings."
+"assembly.OutputTypeq\u0000~\u0000&sq\u0000~\u0000\u000e\u0002\u00e1Chppsq\u0000~\u0000\u0018\u0002\u00e1C]q\u0000~\u0000\u0017pq\u0000~\u00004sq\u0000"
+"~\u0000\"q\u0000~\u0000Eq\u0000~\u0000Fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0006Outputq\u0000~\u0000Iq\u0000~\u0000!sq\u0000~\u0000\u0018\u0002E\u00c5yppsq\u0000~\u0000"
+"1\u0000m\u0000Pppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com"
+".sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.d"
+"atatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00006q\u0000~\u0000;t\u0000\u0002IDq\u0000~\u0000?\u0000"
+"q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000\u00a9q\u0000~\u0000;sq\u0000~\u0000\"t\u0000\u0004nameq\u0000~\u0000Isq\u0000~\u0000\u0018\u0001\u00e5\u0012\u000bppsq\u0000~\u00001\u0001m\'"
+"\u0012ppsr\u0000%com.sun.msv.datatype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"6q\u0000~\u0000;t\u0000\ranySimpleTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000\u00b1q\u0000~\u0000;sq\u0000"
+"~\u0000\"t\u0000\u0007versionq\u0000~\u0000Isr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clo"
+"sedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7"
+"j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00b8[\u0000\u0005tablet\u0000![Lcom"
+"/sun/msv/grammar/Expression;xp\u0000\u0000\u00002\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.gra"
+"mmar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfq\u0000~\u0000Kpq\u0000~\u0000\u0096pq\u0000~\u0000\tq\u0000~\u0000Tppq\u0000~"
+"\u0000\u008cppq\u0000~\u0000Jpppppq\u0000~\u0000\u0006q\u0000~\u0000\u009dppq\u0000~\u0000[pppppppppppppppppppppppq\u0000~\u0000xp"
+"pq\u0000~\u0000wppppq\u0000~\u0000\u0080pppppq\u0000~\u0000vppppppppq\u0000~\u0000\bq\u0000~\u0000\u000fq\u0000~\u0000\u0087pq\u0000~\u0000\rppppq\u0000"
+"~\u0000(pppq\u0000~\u0000\u0007ppppppq\u0000~\u0000\nq\u0000~\u0000bpq\u0000~\u0000apq\u0000~\u0000/ppq\u0000~\u0000jpppppq\u0000~\u0000`pppp"
+"pppppq\u0000~\u0000qpppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppq\u0000~\u0000\u0015q\u0000~\u0000+q"
+"\u0000~\u0000Oq\u0000~\u0000Wq\u0000~\u0000eq\u0000~\u0000mq\u0000~\u0000{q\u0000~\u0000\u0083q\u0000~\u0000\u0091q\u0000~\u0000\u0099pq\u0000~\u0000\u0014q\u0000~\u0000*q\u0000~\u0000Nq\u0000~\u0000V"
+"q\u0000~\u0000dq\u0000~\u0000lq\u0000~\u0000zq\u0000~\u0000\u0082q\u0000~\u0000\u0090q\u0000~\u0000\u0098ppppppppppppppppq\u0000~\u0000\u008eppq\u0000~\u0000Lq\u0000"
+"~\u0000\u008dp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends simkit.xsd.bindings.assembly.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(simkit.xsd.bindings.assembly.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------");
        }

        protected Unmarshaller(simkit.xsd.bindings.assembly.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return simkit.xsd.bindings.assembly.impl.SimkitAssemblyTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        if (("PropertyChangeListenerConnection" == ___local)&&("" == ___uri)) {
                            _PropertyChangeListenerConnection.add(((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerConnectionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerConnectionImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PropertyChangeListenerConnection" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        if (("Output" == ___local)&&("" == ___uri)) {
                            _Output.add(((simkit.xsd.bindings.assembly.impl.OutputImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.OutputImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Output" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  6 :
                        if (("SimEntity" == ___local)&&("" == ___uri)) {
                            _SimEntity.add(((simkit.xsd.bindings.assembly.impl.SimEntityImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.SimEntityImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SimEntity" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("SimEntity" == ___local)&&("" == ___uri)) {
                            _SimEntity.add(((simkit.xsd.bindings.assembly.impl.SimEntityImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.SimEntityImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SimEntity" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("PropertyChangeListener" == ___local)&&("" == ___uri)) {
                            _PropertyChangeListener.add(((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PropertyChangeListener" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  10 :
                        if (("PropertyChangeListener" == ___local)&&("" == ___uri)) {
                            _PropertyChangeListener.add(((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PropertyChangeListener" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("SimEventListenerConnection" == ___local)&&("" == ___uri)) {
                            _SimEventListenerConnection.add(((simkit.xsd.bindings.assembly.impl.SimEventListenerConnectionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.SimEventListenerConnectionImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SimEventListenerConnection" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  11 :
                        attIdx = context.getAttribute("", "listener");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  13 :
                        if (("SimEventListenerConnection" == ___local)&&("" == ___uri)) {
                            _SimEventListenerConnection.add(((simkit.xsd.bindings.assembly.impl.SimEventListenerConnectionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.SimEventListenerConnectionImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SimEventListenerConnection" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        if (("PropertyChangeListenerConnection" == ___local)&&("" == ___uri)) {
                            _PropertyChangeListenerConnection.add(((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerConnectionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerConnectionImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PropertyChangeListenerConnection" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  19 :
                        if (("Output" == ___local)&&("" == ___uri)) {
                            _Output.add(((simkit.xsd.bindings.assembly.impl.OutputImpl) spawnChildFromEnterElement((simkit.xsd.bindings.assembly.impl.OutputImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Output" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  14 :
                        attIdx = context.getAttribute("", "listener");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  17 :
                        attIdx = context.getAttribute("", "entity");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Version = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        state = 19;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  8 :
                        if (("SimEntity" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  20 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  11 :
                        attIdx = context.getAttribute("", "listener");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        if (("SimEventListenerConnection" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  15 :
                        if (("PropertyChangeListenerConnection" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  19 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        attIdx = context.getAttribute("", "listener");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        attIdx = context.getAttribute("", "entity");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("PropertyChangeListener" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("Output" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        state = 19;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  20 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _PropertyChangeListener.add(((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerTypeImpl.class), 21, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  11 :
                        if (("listener" == ___local)&&("" == ___uri)) {
                            _SimEventListenerConnection.add(((simkit.xsd.bindings.assembly.impl.SimEventListenerConnectionTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.assembly.impl.SimEventListenerConnectionTypeImpl.class), 12, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  0 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  19 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        if (("listener" == ___local)&&("" == ___uri)) {
                            _PropertyChangeListenerConnection.add(((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerConnectionTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.assembly.impl.PropertyChangeListenerConnectionTypeImpl.class), 15, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  7 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _SimEntity.add(((simkit.xsd.bindings.assembly.impl.SimEntityTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.assembly.impl.SimEntityTypeImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  17 :
                        if (("entity" == ___local)&&("" == ___uri)) {
                            _Output.add(((simkit.xsd.bindings.assembly.impl.OutputTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.assembly.impl.OutputTypeImpl.class), 18, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        state = 19;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  11 :
                        attIdx = context.getAttribute("", "listener");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  19 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        attIdx = context.getAttribute("", "listener");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  17 :
                        attIdx = context.getAttribute("", "entity");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  16 :
                            state = 19;
                            continue outer;
                        case  9 :
                            state = 10;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  20 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  10 :
                            state = 13;
                            continue outer;
                        case  11 :
                            attIdx = context.getAttribute("", "listener");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  13 :
                            state = 16;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  19 :
                            revertToParentFromText(value);
                            return ;
                        case  14 :
                            attIdx = context.getAttribute("", "listener");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  17 :
                            attIdx = context.getAttribute("", "entity");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
