//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.04.15 at 03:17:15 PDT 
//


package simkit.xsd.bindings.impl;

public class EventTypeImpl implements simkit.xsd.bindings.EventType, com.sun.xml.bind.JAXBObject, simkit.xsd.bindings.impl.runtime.UnmarshallableObject, simkit.xsd.bindings.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, simkit.xsd.bindings.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Comment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected simkit.xsd.bindings.CoordinateType _Coordinate;
    protected com.sun.xml.bind.util.ListImpl _StateTransition = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _LocalVariable = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _ScheduleOrCancel = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _Argument = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (simkit.xsd.bindings.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (simkit.xsd.bindings.EventType.class);
    }

    public java.util.List getComment() {
        return _Comment;
    }

    public simkit.xsd.bindings.CoordinateType getCoordinate() {
        return _Coordinate;
    }

    public void setCoordinate(simkit.xsd.bindings.CoordinateType value) {
        _Coordinate = value;
    }

    public java.util.List getStateTransition() {
        return _StateTransition;
    }

    public java.util.List getLocalVariable() {
        return _LocalVariable;
    }

    public java.util.List getScheduleOrCancel() {
        return _ScheduleOrCancel;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getArgument() {
        return _Argument;
    }

    public simkit.xsd.bindings.impl.runtime.UnmarshallingEventHandler createUnmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
        return new simkit.xsd.bindings.impl.EventTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx3 = 0;
        final int len3 = _StateTransition.size();
        int idx4 = 0;
        final int len4 = _LocalVariable.size();
        int idx5 = 0;
        final int len5 = _ScheduleOrCancel.size();
        int idx7 = 0;
        final int len7 = _Argument.size();
        while (idx1 != len1) {
            context.startElement("", "Comment");
            int idx_0 = idx1;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx1;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment.get(idx1 ++)), "Comment");
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx7 != len7) {
            if (_Argument.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Argument.get(idx7 ++)), "Argument");
            } else {
                context.startElement("", "Argument");
                int idx_2 = idx7;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Argument.get(idx_2 ++)), "Argument");
                context.endNamespaceDecls();
                int idx_3 = idx7;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Argument.get(idx_3 ++)), "Argument");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Argument.get(idx7 ++)), "Argument");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            if (_LocalVariable.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx4 ++)), "LocalVariable");
            } else {
                context.startElement("", "LocalVariable");
                int idx_4 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx_4 ++)), "LocalVariable");
                context.endNamespaceDecls();
                int idx_5 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx_5 ++)), "LocalVariable");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx4 ++)), "LocalVariable");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_StateTransition.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx3 ++)), "StateTransition");
            } else {
                context.startElement("", "StateTransition");
                int idx_6 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx_6 ++)), "StateTransition");
                context.endNamespaceDecls();
                int idx_7 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx_7 ++)), "StateTransition");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx3 ++)), "StateTransition");
                context.endElement();
            }
        }
        while (idx5 != len5) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ScheduleOrCancel.get(idx5 ++)), "ScheduleOrCancel");
        }
        if (_Coordinate!= null) {
            if (_Coordinate instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Coordinate), "Coordinate");
            } else {
                context.startElement("", "Coordinate");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Coordinate), "Coordinate");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Coordinate), "Coordinate");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Coordinate), "Coordinate");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx3 = 0;
        final int len3 = _StateTransition.size();
        int idx4 = 0;
        final int len4 = _LocalVariable.size();
        int idx5 = 0;
        final int len5 = _ScheduleOrCancel.size();
        int idx7 = 0;
        final int len7 = _Argument.size();
        context.startAttribute("", "name");
        try {
            context.text(context.onID(this, ((java.lang.String) _Name)), "Name");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx7 != len7) {
            if (_Argument.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Argument.get(idx7 ++)), "Argument");
            } else {
                idx7 += 1;
            }
        }
        while (idx4 != len4) {
            if (_LocalVariable.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx4 ++)), "LocalVariable");
            } else {
                idx4 += 1;
            }
        }
        while (idx3 != len3) {
            if (_StateTransition.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx3 ++)), "StateTransition");
            } else {
                idx3 += 1;
            }
        }
        while (idx5 != len5) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ScheduleOrCancel.get(idx5 ++)), "ScheduleOrCancel");
        }
        if (_Coordinate!= null) {
            if (_Coordinate instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Coordinate), "Coordinate");
            }
        }
    }

    public void serializeURIs(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx3 = 0;
        final int len3 = _StateTransition.size();
        int idx4 = 0;
        final int len4 = _LocalVariable.size();
        int idx5 = 0;
        final int len5 = _ScheduleOrCancel.size();
        int idx7 = 0;
        final int len7 = _Argument.size();
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx7 != len7) {
            if (_Argument.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Argument.get(idx7 ++)), "Argument");
            } else {
                idx7 += 1;
            }
        }
        while (idx4 != len4) {
            if (_LocalVariable.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx4 ++)), "LocalVariable");
            } else {
                idx4 += 1;
            }
        }
        while (idx3 != len3) {
            if (_StateTransition.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx3 ++)), "StateTransition");
            } else {
                idx3 += 1;
            }
        }
        while (idx5 != len5) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ScheduleOrCancel.get(idx5 ++)), "ScheduleOrCancel");
        }
        if (_Coordinate!= null) {
            if (_Coordinate instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Coordinate), "Coordinate");
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Name);
    }

    public java.lang.Class getPrimaryInterface() {
        return (simkit.xsd.bindings.EventType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0010\u009aC\u00a9ppsq\u0000~\u0000\u0000\u000e\\V\'ppsq\u0000~\u0000\u0000\u000b"
+"6\u00da\u000fppsq\u0000~\u0000\u0000\nG\u00d5\fppsq\u0000~\u0000\u0000\b\u0001A\u00c8ppsq\u0000~\u0000\u0000\u0004\u00ab9;ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u0096\u00c2\nppsr\u0000 com.sun.msv.grammar"
+".OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0096\u00c1\u00ffsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0096\u00c1\u00fcq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0002\u0096\u00c1\u00f1ppsr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0003\u0001W\u0019\u0002ppsr\u0000#com.sun.msv.datatype.xsd.StringType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Buil"
+"tinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concret"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~"
+"\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
+"sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\t"
+"localNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u0000#q\u0000~\u0000\"sq\u0000~\u0000\u000b\u0001?\u00a8\u00eappsr"
+"\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tn"
+"ameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003\u0001?\u00a8\u00dfq\u0000~\u0000\u0011psq\u0000~\u0000\u0017\u0000\u00c0\u00f1\u00fcppsr\u0000\"com.sun.msv.dat"
+"atype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0005QNamesr\u00005com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000%q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u00001q\u0000~\u0000\"sr\u0000#com.sun.msv.grammar.SimpleNameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxr\u0000\u001dcom.s"
+"un.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3"
+".org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expressi"
+"on$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0010\u0001psq\u0000~\u00005t\u0000\u0007Co"
+"mmentt\u0000\u0000q\u0000~\u0000;sq\u0000~\u0000\u000b\u0002\u0014w,ppsq\u0000~\u0000\r\u0002\u0014w!q\u0000~\u0000\u0011psq\u0000~\u0000\u000b\u0002\u0014w\u001eq\u0000~\u0000\u0011psq\u0000"
+"~\u0000\u0012\u0000w\u0082wq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000<psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006q\u0000~\u0000;sq\u0000~\u00005t\u0000\u001csimkit.xsd.bindings.Argumentt\u0000+htt"
+"p://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0012\u0001\u009c\u00f4\u00a5q\u0000~\u0000\u0011p\u0000sq\u0000"
+"~\u0000\u0000\u0001\u009c\u00f4\u009appsq\u0000~\u0000\u0012\u0000w\u0082wpp\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^"
+"q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~\u00005t\u0000 simkit.xsd.bindings.ArgumentTy"
+"peq\u0000~\u0000Msq\u0000~\u0000\u000b\u0001%r\u001eppsq\u0000~\u0000,\u0001%r\u0013q\u0000~\u0000\u0011pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000"
+";sq\u0000~\u00005t\u0000\bArgumentq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000b\u0003V\b\u0088ppsq\u0000~\u0000\r\u0003V\b}q\u0000~\u0000\u0011psq\u0000~"
+"\u0000\u000b\u0003V\bzq\u0000~\u0000\u0011psq\u0000~\u0000\u0012\u0000w\u0082wq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000"
+"~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~\u00005t\u0000!simkit.xsd.bindings.Loc"
+"alVariableq\u0000~\u0000Msq\u0000~\u0000\u0012\u0002\u00de\u0086\u0001q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0002\u00de\u0085\u00f6ppsq\u0000~\u0000\u0012\u0000w\u0082wpp\u0000sq\u0000"
+"~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~"
+"\u00005t\u0000%simkit.xsd.bindings.LocalVariableTypeq\u0000~\u0000Msq\u0000~\u0000\u000b\u0002g\u0003zpps"
+"q\u0000~\u0000,\u0002g\u0003oq\u0000~\u0000\u0011pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\rLocalVaria"
+"bleq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000b\u0002F\u0093?ppsq\u0000~\u0000\r\u0002F\u00934q\u0000~\u0000\u0011psq\u0000~\u0000\u000b\u0002F\u00931q\u0000~\u0000\u0011psq\u0000"
+"~\u0000\u0012\u0000w\u0082wq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000"
+"~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~\u00005t\u0000#simkit.xsd.bindings.StateTransitionq\u0000~"
+"\u0000Msq\u0000~\u0000\u0012\u0001\u00cf\u0010\u00b8q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0001\u00cf\u0010\u00adppsq\u0000~\u0000\u0012\u0000w\u0082wpp\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~"
+"\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~\u00005t\u0000\'simkit.x"
+"sd.bindings.StateTransitionTypeq\u0000~\u0000Msq\u0000~\u0000\u000b\u0001W\u008e1ppsq\u0000~\u0000,\u0001W\u008e&q\u0000"
+"~\u0000\u0011pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\u000fStateTransitionq\u0000~\u0000?q"
+"\u0000~\u0000;sq\u0000~\u0000\u000b\u0000\u00ef\u0004\u00feppsq\u0000~\u0000\r\u0000\u00ef\u0004\u00f3q\u0000~\u0000\u0011psq\u0000~\u0000\u000b\u0000\u00ef\u0004\u00f0q\u0000~\u0000\u0011psq\u0000~\u0000\u0012\u0000w\u0082wq\u0000"
+"~\u0000\u0011p\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq"
+"\u0000~\u0000;sq\u0000~\u00005t\u0000\u001csimkit.xsd.bindings.Scheduleq\u0000~\u0000Msq\u0000~\u0000\u0012\u0000w\u0082wq\u0000~\u0000"
+"\u0011p\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~"
+"\u0000;sq\u0000~\u00005t\u0000\u001asimkit.xsd.bindings.Cancelq\u0000~\u0000Mq\u0000~\u0000;sq\u0000~\u0000\u000b\u0003%|\u0013pps"
+"q\u0000~\u0000\u000b\u0003%|\bq\u0000~\u0000\u0011psq\u0000~\u0000\u0012\u0000w\u0082wq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011p"
+"sq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~\u00005t\u0000\u001esimkit.xsd.bindings."
+"Coordinateq\u0000~\u0000Msq\u0000~\u0000\u0012\u0002\u00ad\u00f9\u008fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0002\u00ad\u00f9\u0084ppsq\u0000~\u0000\u0012\u0000w\u0082wpp\u0000sq\u0000"
+"~\u0000\u000b\u0000w\u0082lppsq\u0000~\u0000\r\u0000w\u0082aq\u0000~\u0000\u0011psq\u0000~\u0000,\u0000w\u0082^q\u0000~\u0000\u0011pq\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~"
+"\u00005t\u0000\"simkit.xsd.bindings.CoordinateTypeq\u0000~\u0000Msq\u0000~\u0000\u000b\u00026w\bppsq\u0000~"
+"\u0000,\u00026v\u00fdq\u0000~\u0000\u0011pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\nCoordinateq\u0000~"
+"\u0000?q\u0000~\u0000;sq\u0000~\u0000,\u0002=\u00ed}ppsq\u0000~\u0000\u0017\u0000V`\u00e6ppsr\u0000\u001fcom.sun.msv.datatype.xsd."
+"IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u001bq\u0000~\u0000\"t\u0000\u0002IDq\u0000~\u00003\u0000q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000\u00b1q\u0000~\u0000\"sq\u0000~\u00005t\u0000\u0004nameq\u0000~\u0000?sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0000\u00b6[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u00004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppq\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000`q\u0000~\u0000hq\u0000~\u0000vq\u0000~\u0000~q\u0000~"
+"\u0000{q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u009aq\u0000~\u0000\u00a2q\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000_q\u0000~\u0000gq\u0000~\u0000uq\u0000~\u0000}q\u0000~\u0000\u008bq\u0000~"
+"\u0000\u0091q\u0000~\u0000\u0099q\u0000~\u0000\u00a1q\u0000~\u0000\u0097q\u0000~\u0000\u0006q\u0000~\u0000]ppq\u0000~\u0000\\pppq\u0000~\u0000Vq\u0000~\u0000\u0096pppppq\u0000~\u0000[ppp"
+"ppppppppppppppq\u0000~\u0000sq\u0000~\u0000\bpq\u0000~\u0000rppq\u0000~\u0000\u0089ppq\u0000~\u0000\u0088ppppq\u0000~\u0000qppq\u0000~\u0000O"
+"pq\u0000~\u0000\u0005q\u0000~\u0000\u0087pppppppppppppppppppppppppq\u0000~\u0000\npppppppppq\u0000~\u0000\u0016ppppp"
+"pq\u0000~\u0000\u00a6pppq\u0000~\u0000Bq\u0000~\u0000lpq\u0000~\u0000\u000fq\u0000~\u0000Apppppppppq\u0000~\u0000\fq\u0000~\u0000@ppq\u0000~\u0000+pppp"
+"ppppppq\u0000~\u0000\u0007ppq\u0000~\u0000\u0082pppq\u0000~\u0000\tpq\u0000~\u0000\u009fpppq\u0000~\u0000eppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends simkit.xsd.bindings.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------");
        }

        protected Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return simkit.xsd.bindings.impl.EventTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  16 :
                        if (("Schedule" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.ScheduleImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ScheduleImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Cancel" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.CancelImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.CancelImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Coordinate" == ___local)&&("" == ___uri)) {
                            _Coordinate = ((simkit.xsd.bindings.impl.CoordinateImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.CoordinateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Coordinate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  6 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            _Argument.add(((simkit.xsd.bindings.impl.ArgumentImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ArgumentImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  12 :
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            _LocalVariable.add(((simkit.xsd.bindings.impl.LocalVariableImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.LocalVariableImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            _StateTransition.add(((simkit.xsd.bindings.impl.StateTransitionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateTransitionImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            _StateTransition.add(((simkit.xsd.bindings.impl.StateTransitionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateTransitionImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("Schedule" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.ScheduleImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ScheduleImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Cancel" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.CancelImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.CancelImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "state");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  8 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            _Argument.add(((simkit.xsd.bindings.impl.ArgumentImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ArgumentImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            _LocalVariable.add(((simkit.xsd.bindings.impl.LocalVariableImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.LocalVariableImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  3 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "y");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        if (("Coordinate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  11 :
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  9 :
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "state");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  8 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  7 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "y");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  0 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  13 :
                        if (("state" == ___local)&&("" == ___uri)) {
                            _StateTransition.add(((simkit.xsd.bindings.impl.StateTransitionTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.StateTransitionTypeImpl.class), 14, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  8 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _Argument.add(((simkit.xsd.bindings.impl.ArgumentTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.ArgumentTypeImpl.class), 9, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  7 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  17 :
                        if (("y" == ___local)&&("" == ___uri)) {
                            _Coordinate = ((simkit.xsd.bindings.impl.CoordinateTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.CoordinateTypeImpl.class), 18, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  10 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _LocalVariable.add(((simkit.xsd.bindings.impl.LocalVariableTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.LocalVariableTypeImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "state");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  8 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "y");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  19 :
                            revertToParentFromText(value);
                            return ;
                        case  16 :
                            state = 19;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 7;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            state = 16;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "state");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  8 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            state = 12;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  17 :
                            attIdx = context.getAttribute("", "y");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  10 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment.add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
