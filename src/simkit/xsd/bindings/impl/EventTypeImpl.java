//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.24 at 03:22:43 PST 
//


package simkit.xsd.bindings.impl;

public class EventTypeImpl implements simkit.xsd.bindings.EventType, com.sun.xml.bind.JAXBObject, simkit.xsd.bindings.impl.runtime.UnmarshallableObject, simkit.xsd.bindings.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, simkit.xsd.bindings.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Comment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _StateTransition = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _LocalVariable = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _ScheduleOrCancel = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _Argument = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (simkit.xsd.bindings.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (simkit.xsd.bindings.EventType.class);
    }

    public java.util.List getComment() {
        return _Comment;
    }

    public java.util.List getStateTransition() {
        return _StateTransition;
    }

    public java.util.List getLocalVariable() {
        return _LocalVariable;
    }

    public java.util.List getScheduleOrCancel() {
        return _ScheduleOrCancel;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getArgument() {
        return _Argument;
    }

    public simkit.xsd.bindings.impl.runtime.UnmarshallingEventHandler createUnmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
        return new simkit.xsd.bindings.impl.EventTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx2 = 0;
        final int len2 = _StateTransition.size();
        int idx3 = 0;
        final int len3 = _LocalVariable.size();
        int idx4 = 0;
        final int len4 = _ScheduleOrCancel.size();
        int idx6 = 0;
        final int len6 = _Argument.size();
        while (idx1 != len1) {
            context.startElement("", "Comment");
            int idx_0 = idx1;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx1;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment.get(idx1 ++)), "Comment");
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            if (_Argument.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Argument.get(idx6 ++)), "Argument");
            } else {
                context.startElement("", "Argument");
                int idx_2 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Argument.get(idx_2 ++)), "Argument");
                context.endNamespaceDecls();
                int idx_3 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Argument.get(idx_3 ++)), "Argument");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Argument.get(idx6 ++)), "Argument");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_LocalVariable.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx3 ++)), "LocalVariable");
            } else {
                context.startElement("", "LocalVariable");
                int idx_4 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx_4 ++)), "LocalVariable");
                context.endNamespaceDecls();
                int idx_5 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx_5 ++)), "LocalVariable");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx3 ++)), "LocalVariable");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_StateTransition.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx2 ++)), "StateTransition");
            } else {
                context.startElement("", "StateTransition");
                int idx_6 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx_6 ++)), "StateTransition");
                context.endNamespaceDecls();
                int idx_7 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx_7 ++)), "StateTransition");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx2 ++)), "StateTransition");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ScheduleOrCancel.get(idx4 ++)), "ScheduleOrCancel");
        }
    }

    public void serializeAttributes(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx2 = 0;
        final int len2 = _StateTransition.size();
        int idx3 = 0;
        final int len3 = _LocalVariable.size();
        int idx4 = 0;
        final int len4 = _ScheduleOrCancel.size();
        int idx6 = 0;
        final int len6 = _Argument.size();
        context.startAttribute("", "name");
        try {
            context.text(context.onID(this, ((java.lang.String) _Name)), "Name");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            if (_Argument.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Argument.get(idx6 ++)), "Argument");
            } else {
                idx6 += 1;
            }
        }
        while (idx3 != len3) {
            if (_LocalVariable.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx3 ++)), "LocalVariable");
            } else {
                idx3 += 1;
            }
        }
        while (idx2 != len2) {
            if (_StateTransition.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx2 ++)), "StateTransition");
            } else {
                idx2 += 1;
            }
        }
        while (idx4 != len4) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ScheduleOrCancel.get(idx4 ++)), "ScheduleOrCancel");
        }
    }

    public void serializeURIs(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx2 = 0;
        final int len2 = _StateTransition.size();
        int idx3 = 0;
        final int len3 = _LocalVariable.size();
        int idx4 = 0;
        final int len4 = _ScheduleOrCancel.size();
        int idx6 = 0;
        final int len6 = _Argument.size();
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            if (_Argument.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Argument.get(idx6 ++)), "Argument");
            } else {
                idx6 += 1;
            }
        }
        while (idx3 != len3) {
            if (_LocalVariable.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalVariable.get(idx3 ++)), "LocalVariable");
            } else {
                idx3 += 1;
            }
        }
        while (idx2 != len2) {
            if (_StateTransition.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StateTransition.get(idx2 ++)), "StateTransition");
            } else {
                idx2 += 1;
            }
        }
        while (idx4 != len4) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ScheduleOrCancel.get(idx4 ++)), "ScheduleOrCancel");
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Name);
    }

    public java.lang.Class getPrimaryInterface() {
        return (simkit.xsd.bindings.EventType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\t\u0005\u00e0\u00d6ppsq\u0000~\u0000\u0000\u0005\u00f2yappsq\u0000~\u0000\u0000\u0005"
+"\u0092\u001c:ppsq\u0000~\u0000\u0000\u0004\u00e1{bppsq\u0000~\u0000\u0000\u0003\u00ccF\u008cppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u0082s\u0018ppsr\u0000 com.sun.msv.grammar.OneOrMoreEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0082s\rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0082s\nq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0001\u0082r\u00ffppsr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003\u0000\u0005\u009aDppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000"
+"\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000\"q\u0000~\u0000!sq\u0000~\u0000\n\u0001|\u00d8\u00b6ppsr\u0000 com.sun.ms"
+"v.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000"
+"\u0012xq\u0000~\u0000\u0003\u0001|\u00d8\u00abq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\n\u00b4Tppsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0005QNamesr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000\'sq\u0000~"
+"\u0000(q\u0000~\u00000q\u0000~\u0000!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.gramm"
+"ar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XM"
+"LSchema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u00004t\u0000\u0007Commentt\u0000\u0000q\u0000~\u0000"
+":sq\u0000~\u0000\n\u0002I\u00d3oppsq\u0000~\u0000\f\u0002I\u00d3dq\u0000~\u0000\u0010psq\u0000~\u0000\n\u0002I\u00d3aq\u0000~\u0000\u0010psq\u0000~\u0000\u0011\u00000.\u0089q\u0000~\u0000\u0010"
+"p\u0000sq\u0000~\u0000\n\u00000.~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010psr\u00002com.sun.ms"
+"v.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000"
+"\bq\u0000~\u0000;psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005"
+"q\u0000~\u0000:sq\u0000~\u00004t\u0000\u001csimkit.xsd.bindings.Argumentt\u0000+http://java.sun"
+".com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0011\u0002\u0019\u00a4\u00d6q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0002\u0019\u00a4\u00cbppsq\u0000"
+"~\u0000\u0011\u00000.\u0089pp\u0000sq\u0000~\u0000\n\u00000.~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010pq\u0000~\u0000Gq"
+"\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000 simkit.xsd.bindings.ArgumentTypeq\u0000~\u0000Lsq\u0000~\u0000"
+"\n\u0001\u00e9v=ppsq\u0000~\u0000+\u0001\u00e9v2q\u0000~\u0000\u0010pq\u0000~\u0000-sq\u0000~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\bAr"
+"gumentq\u0000~\u0000>q\u0000~\u0000:sq\u0000~\u0000\n\u0001\u00154\u00d1ppsq\u0000~\u0000\f\u0001\u00154\u00c6q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0001\u00154\u00c3q\u0000~\u0000\u0010p"
+"sq\u0000~\u0000\u0011\u00000.\u0089q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u00000.~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010"
+"pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000!simkit.xsd.bindings.LocalVariableq\u0000"
+"~\u0000Lsq\u0000~\u0000\u0011\u0000\u00e5\u00068q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0000\u00e5\u0006-ppsq\u0000~\u0000\u0011\u00000.\u0089pp\u0000sq\u0000~\u0000\n\u00000.~ppsq\u0000"
+"~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000%simkit."
+"xsd.bindings.LocalVariableTypeq\u0000~\u0000Lsq\u0000~\u0000\n\u0000\u00b4\u00d7\u009fppsq\u0000~\u0000+\u0000\u00b4\u00d7\u0094q\u0000~"
+"\u0000\u0010pq\u0000~\u0000-sq\u0000~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\rLocalVariableq\u0000~\u0000>q\u0000~\u0000"
+":sq\u0000~\u0000\n\u0000\u00b0\u00a0\u00d3ppsq\u0000~\u0000\f\u0000\u00b0\u00a0\u00c8q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0000\u00b0\u00a0\u00c5q\u0000~\u0000\u0010psq\u0000~\u0000\u0011\u00000.\u0089q\u0000~\u0000\u0010"
+"p\u0000sq\u0000~\u0000\n\u00000.~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000"
+":sq\u0000~\u00004t\u0000#simkit.xsd.bindings.StateTransitionq\u0000~\u0000Lsq\u0000~\u0000\u0011\u0000\u0080r:"
+"q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0000\u0080r/ppsq\u0000~\u0000\u0011\u00000.\u0089pp\u0000sq\u0000~\u0000\n\u00000.~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010p"
+"sq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000\'simkit.xsd.bindings."
+"StateTransitionTypeq\u0000~\u0000Lsq\u0000~\u0000\n\u0000PC\u00a1ppsq\u0000~\u0000+\u0000PC\u0096q\u0000~\u0000\u0010pq\u0000~\u0000-sq\u0000"
+"~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\u000fStateTransitionq\u0000~\u0000>q\u0000~\u0000:sq\u0000~\u0000\n\u0000`"
+"]\"ppsq\u0000~\u0000\f\u0000`]\u0017q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0000`]\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0011\u00000.\u0089q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u0000"
+"0.~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000"
+"\u001csimkit.xsd.bindings.Scheduleq\u0000~\u0000Lsq\u0000~\u0000\u0011\u00000.\u0089q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u00000."
+"~ppsq\u0000~\u0000\f\u00000.sq\u0000~\u0000\u0010psq\u0000~\u0000+\u00000.pq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000\u001as"
+"imkit.xsd.bindings.Cancelq\u0000~\u0000Lq\u0000~\u0000:sq\u0000~\u0000+\u0003\u0013gpppsq\u0000~\u0000\u0016\u0001\u00fam(pps"
+"r\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv"
+".datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype."
+"xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000!t\u0000\u0002IDq\u0000~\u00002\u0000q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~"
+"\u0000\u009bq\u0000~\u0000!sq\u0000~\u00004t\u0000\u0004nameq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.ExpressionP"
+"ool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionP"
+"ool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clos"
+"edHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00a0[\u0000\u0005tablet"
+"\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000+\u0000\u0000\u00009pur\u0000![Lcom.sun."
+"msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppq\u0000~\u0000Dq\u0000~\u0000Qq\u0000~"
+"\u0000_q\u0000~\u0000gq\u0000~\u0000uq\u0000~\u0000}q\u0000~\u0000\u008bq\u0000~\u0000\\q\u0000~\u0000\u0091pq\u0000~\u0000[q\u0000~\u0000Cq\u0000~\u0000Pq\u0000~\u0000^q\u0000~\u0000fq\u0000"
+"~\u0000tq\u0000~\u0000|q\u0000~\u0000\u008aq\u0000~\u0000\u0090ppq\u0000~\u0000Zpppppppppppppq\u0000~\u0000*ppppppppppq\u0000~\u0000\u0081pp"
+"ppppq\u0000~\u0000\u0088ppq\u0000~\u0000\u0087pppppq\u0000~\u0000Uppppq\u0000~\u0000\u0086pq\u0000~\u0000\u0005ppppppppppq\u0000~\u0000zpppp"
+"pppppppppppq\u0000~\u0000Npq\u0000~\u0000\u0007pppppppppq\u0000~\u0000\tpq\u0000~\u0000\u0015pppppppppppq\u0000~\u0000kq\u0000"
+"~\u0000rq\u0000~\u0000\u000eq\u0000~\u0000qpppppppppq\u0000~\u0000\u000bq\u0000~\u0000ppq\u0000~\u0000Appq\u0000~\u0000@q\u0000~\u0000\bpppppppppq"
+"\u0000~\u0000?pppq\u0000~\u0000dppppppppppppppppppppq\u0000~\u0000\u0006pppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends simkit.xsd.bindings.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------");
        }

        protected Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return simkit.xsd.bindings.impl.EventTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        if (("Schedule" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.ScheduleImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ScheduleImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Cancel" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.CancelImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.CancelImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            _Argument.add(((simkit.xsd.bindings.impl.ArgumentImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ArgumentImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            _LocalVariable.add(((simkit.xsd.bindings.impl.LocalVariableImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.LocalVariableImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 15;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  11 :
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            _StateTransition.add(((simkit.xsd.bindings.impl.StateTransitionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateTransitionImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("Schedule" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.ScheduleImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ScheduleImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Cancel" == ___local)&&("" == ___uri)) {
                            _ScheduleOrCancel.add(((simkit.xsd.bindings.impl.CancelImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.CancelImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "value");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            _Argument.add(((simkit.xsd.bindings.impl.ArgumentImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ArgumentImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "state");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  10 :
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            _LocalVariable.add(((simkit.xsd.bindings.impl.LocalVariableImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.LocalVariableImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 15;
                            return ;
                        }
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            _StateTransition.add(((simkit.xsd.bindings.impl.StateTransitionImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateTransitionImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 11;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("LocalVariable" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  11 :
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "value");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "state");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  8 :
                        if (("Argument" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("StateTransition" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Argument.add(((simkit.xsd.bindings.impl.ArgumentTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.ArgumentTypeImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  11 :
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("value" == ___local)&&("" == ___uri)) {
                            _LocalVariable.add(((simkit.xsd.bindings.impl.LocalVariableTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.LocalVariableTypeImpl.class), 16, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  13 :
                        if (("state" == ___local)&&("" == ___uri)) {
                            _StateTransition.add(((simkit.xsd.bindings.impl.StateTransitionTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.StateTransitionTypeImpl.class), 14, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  10 :
                        state = 11;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  11 :
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "value");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "state");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  2 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  9 :
                            state = 10;
                            continue outer;
                        case  11 :
                            state = 12;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "value");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "state");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  10 :
                            state = 11;
                            continue outer;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment.add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
