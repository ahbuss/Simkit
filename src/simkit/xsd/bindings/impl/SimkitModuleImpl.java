//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.04.14 at 10:40:49 GMT-08:00 
//


package simkit.xsd.bindings.impl;

public class SimkitModuleImpl
    extends simkit.xsd.bindings.impl.SimkitModuleTypeImpl
    implements simkit.xsd.bindings.SimkitModule, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, simkit.xsd.bindings.impl.runtime.UnmarshallableObject, simkit.xsd.bindings.impl.runtime.XMLSerializable, simkit.xsd.bindings.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (simkit.xsd.bindings.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (simkit.xsd.bindings.SimkitModule.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "SimkitModule";
    }

    public simkit.xsd.bindings.impl.runtime.UnmarshallingEventHandler createUnmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
        return new simkit.xsd.bindings.impl.SimkitModuleImpl.Unmarshaller(context);
    }

    public void serializeBody(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "SimkitModule");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (simkit.xsd.bindings.SimkitModule.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\f\u001d\u00ab>p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\f\u001d\u00ab3ppsq\u0000~\u0000\u0007\n\u00d2W\u00e8ppsq\u0000~\u0000\u0007\n1Z\u00aappsq\u0000~\u0000\u0007\bK\u00a6\u00a8ppsq\u0000~\u0000\u0007\u0006\u00d9b\u00b0ppsq\u0000~"
+"\u0000\u0007\u0005X\u00e6appsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0003&"
+"\u00a4\u00b4ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0003&\u00a4\u00a9sr\u0000\u0011j"
+"ava.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000\u0003&\u00a4\u00a6q\u0000~\u0000\u0015p\u0000sq\u0000~"
+"\u0000\u0007\u0003&\u00a4\u009bppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000\u00b2\u00c6\u00b6ppsr\u0000#com.sun.msv.datatype.x"
+"sd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.data"
+"type.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatyp"
+"e.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XS"
+"DatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L"
+"\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006str"
+"ingsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#s"
+"q\u0000~\u0000\u000f\u0002s\u00dd\u00e0ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0002s\u00dd\u00d5q\u0000~\u0000\u0015psq\u0000~\u0000\u0018\u0000\u00abT\u00fbppsr\u0000\"co"
+"m.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0005QNa"
+"mesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000#sr\u0000#com.sun.msv.grammar"
+".SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq"
+"\u0000~\u0000 xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)"
+"http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gra"
+"mmar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tsq\u0000~\u0000\u0014"
+"\u0001psq\u0000~\u00006t\u0000\u0007Commentt\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000\u000f\u00022A\u00a8ppsq\u0000~\u0000\u0011\u00022A\u009dq\u0000~\u0000\u0015psq\u0000~\u0000\u000f"
+"\u00022A\u009aq\u0000~\u0000\u0015psq\u0000~\u0000\u0000\u0000J~\u0018q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u000f\u0000J~\rppsq\u0000~\u0000\u0011\u0000J~\u0002q\u0000~\u0000\u0015psq\u0000~\u0000"
+"-\u0000J}\u00ffq\u0000~\u0000\u0015psr\u00002com.sun.msv.grammar.Expression$AnyStringExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bq\u0000~\u0000=psr\u0000 com.sun.msv.grammar.AnyN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00007q\u0000~\u0000<sq\u0000~\u00006t\u0000\u001dsimkit.xsd.bindings.P"
+"arametert\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000"
+"\u0001\u00e7\u00c3\u0080q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0007\u0001\u00e7\u00c3uppsq\u0000~\u0000\u0000\u0000J~\u0018pp\u0000sq\u0000~\u0000\u000f\u0000J~\rppsq\u0000~\u0000\u0011\u0000J~\u0002q\u0000"
+"~\u0000\u0015psq\u0000~\u0000-\u0000J}\u00ffq\u0000~\u0000\u0015pq\u0000~\u0000Iq\u0000~\u0000Kq\u0000~\u0000<sq\u0000~\u00006t\u0000!simkit.xsd.bindi"
+"ngs.ParameterTypeq\u0000~\u0000Nsq\u0000~\u0000\u000f\u0001\u009dEXppsq\u0000~\u0000-\u0001\u009dEMq\u0000~\u0000\u0015pq\u0000~\u0000/sq\u0000~\u0000"
+"6q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\tParameterq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0001\u0080|Jppsq\u0000~"
+"\u0000\u0011\u0001\u0080|?q\u0000~\u0000\u0015psq\u0000~\u0000\u000f\u0001\u0080|<q\u0000~\u0000\u0015psq\u0000~\u0000\u0000\u0000J~\u0018q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u000f\u0000J~\rppsq\u0000"
+"~\u0000\u0011\u0000J~\u0002q\u0000~\u0000\u0015psq\u0000~\u0000-\u0000J}\u00ffq\u0000~\u0000\u0015pq\u0000~\u0000Iq\u0000~\u0000Kq\u0000~\u0000<sq\u0000~\u00006t\u0000!simkit."
+"xsd.bindings.StateVariableq\u0000~\u0000Nsq\u0000~\u0000\u0000\u00015\u00fe\"q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0007\u00015\u00fe\u0017pp"
+"sq\u0000~\u0000\u0000\u0000J~\u0018pp\u0000sq\u0000~\u0000\u000f\u0000J~\rppsq\u0000~\u0000\u0011\u0000J~\u0002q\u0000~\u0000\u0015psq\u0000~\u0000-\u0000J}\u00ffq\u0000~\u0000\u0015pq\u0000~"
+"\u0000Iq\u0000~\u0000Kq\u0000~\u0000<sq\u0000~\u00006t\u0000%simkit.xsd.bindings.StateVariableTypeq\u0000"
+"~\u0000Nsq\u0000~\u0000\u000f\u0000\u00eb\u007f\u00fappsq\u0000~\u0000-\u0000\u00eb\u007f\u00efq\u0000~\u0000\u0015pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000"
+"~\u00006t\u0000\rStateVariableq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u0011\u0001rC\u00f3ppsq\u0000~\u0000\u000f\u0001rC\u00f0ppsq\u0000~\u0000\u0000\u0000"
+"J~\u0018pp\u0000sq\u0000~\u0000\u000f\u0000J~\rppsq\u0000~\u0000\u0011\u0000J~\u0002q\u0000~\u0000\u0015psq\u0000~\u0000-\u0000J}\u00ffq\u0000~\u0000\u0015pq\u0000~\u0000Iq\u0000~\u0000K"
+"q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0019simkit.xsd.bindings.Eventq\u0000~\u0000Nsq\u0000~\u0000\u0000\u0001\'\u00c5\u00d6pp\u0000sq\u0000"
+"~\u0000\u0007\u0001\'\u00c5\u00cbppsq\u0000~\u0000\u0000\u0000J~\u0018pp\u0000sq\u0000~\u0000\u000f\u0000J~\rppsq\u0000~\u0000\u0011\u0000J~\u0002q\u0000~\u0000\u0015psq\u0000~\u0000-\u0000J}\u00ff"
+"q\u0000~\u0000\u0015pq\u0000~\u0000Iq\u0000~\u0000Kq\u0000~\u0000<sq\u0000~\u00006t\u0000\u001dsimkit.xsd.bindings.EventTypeq"
+"\u0000~\u0000Nsq\u0000~\u0000\u000f\u0000\u00ddG\u00aeppsq\u0000~\u0000-\u0000\u00ddG\u00a3q\u0000~\u0000\u0015pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq"
+"\u0000~\u00006t\u0000\u0005Eventq\u0000~\u0000@sq\u0000~\u0000-\u0001\u00e5\u00b3\u00fdppsq\u0000~\u0000\u0018\u0000|8\u0095ppsr\u0000%com.sun.msv.dat"
+"atype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\ranySimpleType"
+"q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000\u008bq\u0000~\u0000#sq\u0000~\u00006t\u0000\u0004nameq\u0000~\u0000@sq\u0000~\u0000-\u0000\u00a0\u00fd9ppq\u0000~\u0000"
+"\u0088sq\u0000~\u00006t\u0000\u0007versionq\u0000~\u0000@sq\u0000~\u0000\u000f\u0001KSFppsq\u0000~\u0000-\u0001KS;q\u0000~\u0000\u0015pq\u0000~\u0000/sq\u0000~\u0000"
+"6q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fSimkitModuleq\u0000~\u0000@sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006par"
+"entq\u0000~\u0000\u0098[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000%\u0000\u0000"
+"\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppp"
+"pq\u0000~\u0000\fpppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppq\u0000~\u0000\rppq\u0000~\u0000\nppppppppppppppppq\u0000~\u0000\u0092pppppppq\u0000~\u0000\u000epppp"
+"ppppppppppppq\u0000~\u0000Cpq\u0000~\u0000sq\u0000~\u0000Pq\u0000~\u0000Bq\u0000~\u0000{q\u0000~\u0000rpppppppq\u0000~\u0000Wq\u0000~\u0000\u0017"
+"q\u0000~\u0000Aq\u0000~\u0000\u0082q\u0000~\u0000\u000bppppppppppq\u0000~\u0000\u0013q\u0000~\u0000^pq\u0000~\u0000fq\u0000~\u0000]ppppq\u0000~\u0000Fq\u0000~\u0000S"
+"q\u0000~\u0000\u0010q\u0000~\u0000aq\u0000~\u0000iq\u0000~\u0000mq\u0000~\u0000\\q\u0000~\u0000vq\u0000~\u0000~ppq\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000`q\u0000~\u0000hq\u0000~"
+"\u0000uq\u0000~\u0000,q\u0000~\u0000}q\u0000~\u0000\tppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends simkit.xsd.bindings.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return simkit.xsd.bindings.impl.SimkitModuleImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("SimkitModule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("SimkitModule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((simkit.xsd.bindings.impl.SimkitModuleTypeImpl)simkit.xsd.bindings.impl.SimkitModuleImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
