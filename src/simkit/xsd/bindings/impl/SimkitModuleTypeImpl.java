//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.23 at 11:39:48 PST 
//


package simkit.xsd.bindings.impl;

public class SimkitModuleTypeImpl implements simkit.xsd.bindings.SimkitModuleType, com.sun.xml.bind.JAXBObject, simkit.xsd.bindings.impl.runtime.UnmarshallableObject, simkit.xsd.bindings.impl.runtime.XMLSerializable, simkit.xsd.bindings.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Comment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Version;
    protected com.sun.xml.bind.util.ListImpl _Event = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _VariableDeclarations = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (simkit.xsd.bindings.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (simkit.xsd.bindings.SimkitModuleType.class);
    }

    public java.util.List getComment() {
        return _Comment;
    }

    public java.lang.String getVersion() {
        return _Version;
    }

    public void setVersion(java.lang.String value) {
        _Version = value;
    }

    public java.util.List getEvent() {
        return _Event;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getVariableDeclarations() {
        return _VariableDeclarations;
    }

    public simkit.xsd.bindings.impl.runtime.UnmarshallingEventHandler createUnmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
        return new simkit.xsd.bindings.impl.SimkitModuleTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx3 = 0;
        final int len3 = _Event.size();
        int idx5 = 0;
        final int len5 = _VariableDeclarations.size();
        while (idx1 != len1) {
            context.startElement("", "Comment");
            int idx_0 = idx1;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx1;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment.get(idx1 ++)), "Comment");
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            if (_VariableDeclarations.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VariableDeclarations.get(idx5 ++)), "VariableDeclarations");
            } else {
                context.startElement("", "VariableDeclarations");
                int idx_2 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VariableDeclarations.get(idx_2 ++)), "VariableDeclarations");
                context.endNamespaceDecls();
                int idx_3 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VariableDeclarations.get(idx_3 ++)), "VariableDeclarations");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VariableDeclarations.get(idx5 ++)), "VariableDeclarations");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_Event.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Event.get(idx3 ++)), "Event");
            } else {
                context.startElement("", "Event");
                int idx_4 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Event.get(idx_4 ++)), "Event");
                context.endNamespaceDecls();
                int idx_5 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Event.get(idx_5 ++)), "Event");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Event.get(idx3 ++)), "Event");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx3 = 0;
        final int len3 = _Event.size();
        int idx5 = 0;
        final int len5 = _VariableDeclarations.size();
        context.startAttribute("", "version");
        try {
            context.text(((java.lang.String) _Version), "Version");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            if (_VariableDeclarations.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VariableDeclarations.get(idx5 ++)), "VariableDeclarations");
            } else {
                idx5 += 1;
            }
        }
        while (idx3 != len3) {
            if (_Event.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Event.get(idx3 ++)), "Event");
            } else {
                idx3 += 1;
            }
        }
    }

    public void serializeURIs(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Comment.size();
        int idx3 = 0;
        final int len3 = _Event.size();
        int idx5 = 0;
        final int len5 = _VariableDeclarations.size();
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            if (_VariableDeclarations.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VariableDeclarations.get(idx5 ++)), "VariableDeclarations");
            } else {
                idx5 += 1;
            }
        }
        while (idx3 != len3) {
            if (_Event.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Event.get(idx3 ++)), "Event");
            } else {
                idx3 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (simkit.xsd.bindings.SimkitModuleType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000bm\u0017.ppsq\u0000~\u0000\u0000\u000b\u0014\u0093\u0007ppsq\u0000~\u0000\u0000\n"
+"W\u00ba!ppsq\u0000~\u0000\u0000\u0005\u00a6\u00fb\u0085ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001\u0002\u00a4C6ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"\u0002\u00a4C+sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun."
+"msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~"
+"\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00a4C(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002\u00a4C\u001dppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00ca\u00f6\u00d1q\u0000~\u0000\u000f"
+"psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwa"
+"ysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lc"
+"om/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www."
+"w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000"
+"\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sq\u0000~\u0000\t\u0001\u00d9LGppsr\u0000 com.sun.msv.gr"
+"ammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0011xq\u0000"
+"~\u0000\u0003\u0001\u00d9L<q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u0081\u00b2\u000bppsr\u0000\"com.sun.msv.datatype.xsd.QnameT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#q\u0000~\u0000&sq\u0000~\u0000\'q\u0000"
+"~\u0000/q\u0000~\u0000 sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.N"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSch"
+"ema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~\u00003t\u0000\u0007Commentt\u0000\u0000q\u0000~\u00009sq\u0000"
+"~\u0000\t\u0003\u0002\u00b8Jppsq\u0000~\u0000\u000b\u0003\u0002\u00b8?q\u0000~\u0000\u000fpsq\u0000~\u0000\t\u0003\u0002\u00b8<q\u0000~\u0000\u000fpsq\u0000~\u0000\u0010\u0001\u0081\\\u001dq\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\t\u0001\u0081\\\u0012ppsq\u0000~\u0000\u000b\u0001\u0081\\\u0007q\u0000~\u0000\u000fpsq\u0000~\u0000*\u0001\u0081\\\u0004q\u0000~\u0000\u000fpsr\u00002com.sun.msv.gr"
+"ammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~"
+"\u0000:q\u0000~\u0000Fsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004"
+"q\u0000~\u00009sq\u0000~\u00003t\u0000$simkit.xsd.bindings.ParameterElementt\u0000+http://"
+"java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0010\u0001\u0081\\\u001dq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\t\u0001"
+"\u0081\\\u0012ppsq\u0000~\u0000\u000b\u0001\u0081\\\u0007q\u0000~\u0000\u000fpsq\u0000~\u0000*\u0001\u0081\\\u0004q\u0000~\u0000\u000fpq\u0000~\u0000Fq\u0000~\u0000Hq\u0000~\u00009sq\u0000~\u00003t\u0000"
+"(simkit.xsd.bindings.StateVariableElementq\u0000~\u0000Kq\u0000~\u00009sq\u0000~\u0000\u000b\u0004\u00b0\u00be"
+"\u0097ppsq\u0000~\u0000\t\u0004\u00b0\u00be\u0094ppsq\u0000~\u0000\u0010\u0001\u0081\\\u001dpp\u0000sq\u0000~\u0000\t\u0001\u0081\\\u0012ppsq\u0000~\u0000\u000b\u0001\u0081\\\u0007q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000*\u0001\u0081\\\u0004q\u0000~\u0000\u000fpq\u0000~\u0000Fq\u0000~\u0000Hq\u0000~\u00009sq\u0000~\u00003t\u0000 simkit.xsd.bindings.Even"
+"tElementq\u0000~\u0000Ksq\u0000~\u0000\u0010\u0003/bupp\u0000sq\u0000~\u0000\u0000\u0003/bjppsq\u0000~\u0000\u0010\u0001\u0081\\\u001dpp\u0000sq\u0000~\u0000\t\u0001\u0081\\"
+"\u0012ppsq\u0000~\u0000\u000b\u0001\u0081\\\u0007q\u0000~\u0000\u000fpsq\u0000~\u0000*\u0001\u0081\\\u0004q\u0000~\u0000\u000fpq\u0000~\u0000Fq\u0000~\u0000Hq\u0000~\u00009sq\u0000~\u00003t\u0000\u001ds"
+"imkit.xsd.bindings.EventTypeq\u0000~\u0000Ksq\u0000~\u0000\t\u0001\u00ae\u0006Hppsq\u0000~\u0000*\u0001\u00ae\u0006=q\u0000~\u0000\u000f"
+"pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\u0005Eventq\u0000~\u0000=sq\u0000~\u0000*\u0000\u00bc\u00d8\u00e1ppsq"
+"\u0000~\u0000\u0015\u0000\"\u001e\u00aeppsr\u0000%com.sun.msv.datatype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\ranySimpleTypeq\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000kq\u0000~\u0000 sq\u0000~\u0000"
+"3t\u0000\u0007versionq\u0000~\u0000=sq\u0000~\u0000*\u0000X\u0084\"ppq\u0000~\u0000hsq\u0000~\u00003t\u0000\u0004nameq\u0000~\u0000=sr\u0000\"com.s"
+"un.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/s"
+"un/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.g"
+"rammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresh"
+"oldL\u0000\u0006parentq\u0000~\u0000s[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression"
+";xp\u0000\u0000\u0000\u0017\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000"
+"xp\u0000\u0000\u0000\u00bfpppppppppq\u0000~\u0000[pppppppppppppppppppppppppppq\u0000~\u0000)q\u0000~\u0000bppp"
+"q\u0000~\u0000\u0007pppq\u0000~\u0000\bpppppppppq\u0000~\u0000\u0005pppppppppppq\u0000~\u0000\u0014pppppppppppppq\u0000~\u0000"
+"\rppppppppppq\u0000~\u0000\npppppppppppppppq\u0000~\u0000\u0006pppppppppppppppq\u0000~\u0000@ppq\u0000"
+"~\u0000?ppppppq\u0000~\u0000Cq\u0000~\u0000Nq\u0000~\u0000Vq\u0000~\u0000^q\u0000~\u0000>ppppppq\u0000~\u0000Bq\u0000~\u0000Mq\u0000~\u0000Uq\u0000~\u0000]"
+"pppppppppppppppppppppppppppppq\u0000~\u0000Sppq\u0000~\u0000Rpppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends simkit.xsd.bindings.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------");
        }

        protected Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return simkit.xsd.bindings.impl.SimkitModuleTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  11 :
                        if (true) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.AnyTypeImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.AnyTypeImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _VariableDeclarations.add(((simkit.xsd.bindings.impl.AnyTypeImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.AnyTypeImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.ParameterElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ParameterElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.StateVariableElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateVariableElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VariableDeclarations" == ___local)&&("" == ___uri)) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.VariableDeclarationsElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.VariableDeclarationsElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VariableDeclarations" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 11;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  10 :
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.ParameterElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ParameterElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.StateVariableElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateVariableElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VariableDeclarations" == ___local)&&("" == ___uri)) {
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.VariableDeclarationsElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.VariableDeclarationsElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VariableDeclarations" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 11;
                            return ;
                        }
                        if (("Event" == ___local)&&("" == ___uri)) {
                            _Event.add(((simkit.xsd.bindings.impl.EventElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.EventElementImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Event" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  15 :
                        if (("Event" == ___local)&&("" == ___uri)) {
                            _Event.add(((simkit.xsd.bindings.impl.EventElementImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.EventElementImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Event" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Version = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        if (("VariableDeclarations" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  11 :
                        _VariableDeclarations.add(((simkit.xsd.bindings.impl.AnyTypeImpl) spawnChildFromLeaveElement((simkit.xsd.bindings.impl.AnyTypeImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  14 :
                        if (("Event" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  11 :
                        _VariableDeclarations.add(((simkit.xsd.bindings.impl.AnyTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.AnyTypeImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  13 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Event.add(((simkit.xsd.bindings.impl.EventTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.EventTypeImpl.class), 14, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  11 :
                        _VariableDeclarations.add(((simkit.xsd.bindings.impl.AnyTypeImpl) spawnChildFromLeaveAttribute((simkit.xsd.bindings.impl.AnyTypeImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  11 :
                            _VariableDeclarations.add(((simkit.xsd.bindings.impl.AnyTypeImpl) spawnChildFromText((simkit.xsd.bindings.impl.AnyTypeImpl.class), 12, value)));
                            return ;
                        case  4 :
                            eatText1(value);
                            state = 5;
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  9 :
                            state = 10;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            eatText3(value);
                            state = 8;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment.add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
