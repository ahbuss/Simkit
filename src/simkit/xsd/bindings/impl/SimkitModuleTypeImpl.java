//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.25 at 11:41:55 PST 
//


package simkit.xsd.bindings.impl;

public class SimkitModuleTypeImpl implements simkit.xsd.bindings.SimkitModuleType, com.sun.xml.bind.JAXBObject, simkit.xsd.bindings.impl.runtime.UnmarshallableObject, simkit.xsd.bindings.impl.runtime.XMLSerializable, simkit.xsd.bindings.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _StateVariable = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _Comment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Version;
    protected com.sun.xml.bind.util.ListImpl _Event = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _Parameter = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    public final static java.lang.Class version = (simkit.xsd.bindings.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (simkit.xsd.bindings.SimkitModuleType.class);
    }

    public java.util.List getStateVariable() {
        return _StateVariable;
    }

    public java.util.List getComment() {
        return _Comment;
    }

    public java.lang.String getVersion() {
        return _Version;
    }

    public void setVersion(java.lang.String value) {
        _Version = value;
    }

    public java.util.List getEvent() {
        return _Event;
    }

    public java.util.List getParameter() {
        return _Parameter;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public simkit.xsd.bindings.impl.runtime.UnmarshallingEventHandler createUnmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
        return new simkit.xsd.bindings.impl.SimkitModuleTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _StateVariable.size();
        int idx2 = 0;
        final int len2 = _Comment.size();
        int idx4 = 0;
        final int len4 = _Event.size();
        int idx5 = 0;
        final int len5 = _Parameter.size();
        while (idx2 != len2) {
            context.startElement("", "Comment");
            int idx_0 = idx2;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx2;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment.get(idx2 ++)), "Comment");
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            if (_Parameter.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parameter.get(idx5 ++)), "Parameter");
            } else {
                context.startElement("", "Parameter");
                int idx_2 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parameter.get(idx_2 ++)), "Parameter");
                context.endNamespaceDecls();
                int idx_3 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parameter.get(idx_3 ++)), "Parameter");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parameter.get(idx5 ++)), "Parameter");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_StateVariable.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StateVariable.get(idx1 ++)), "StateVariable");
            } else {
                context.startElement("", "StateVariable");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StateVariable.get(idx_4 ++)), "StateVariable");
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StateVariable.get(idx_5 ++)), "StateVariable");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StateVariable.get(idx1 ++)), "StateVariable");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            if (_Event.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Event.get(idx4 ++)), "Event");
            } else {
                context.startElement("", "Event");
                int idx_6 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Event.get(idx_6 ++)), "Event");
                context.endNamespaceDecls();
                int idx_7 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Event.get(idx_7 ++)), "Event");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Event.get(idx4 ++)), "Event");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _StateVariable.size();
        int idx2 = 0;
        final int len2 = _Comment.size();
        int idx4 = 0;
        final int len4 = _Event.size();
        int idx5 = 0;
        final int len5 = _Parameter.size();
        context.startAttribute("", "version");
        try {
            context.text(((java.lang.String) _Version), "Version");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx2 != len2) {
            try {
                idx2 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            if (_Parameter.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parameter.get(idx5 ++)), "Parameter");
            } else {
                idx5 += 1;
            }
        }
        while (idx1 != len1) {
            if (_StateVariable.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StateVariable.get(idx1 ++)), "StateVariable");
            } else {
                idx1 += 1;
            }
        }
        while (idx4 != len4) {
            if (_Event.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Event.get(idx4 ++)), "Event");
            } else {
                idx4 += 1;
            }
        }
    }

    public void serializeURIs(simkit.xsd.bindings.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _StateVariable.size();
        int idx2 = 0;
        final int len2 = _Comment.size();
        int idx4 = 0;
        final int len4 = _Event.size();
        int idx5 = 0;
        final int len5 = _Parameter.size();
        while (idx2 != len2) {
            try {
                idx2 += 1;
            } catch (java.lang.Exception e) {
                simkit.xsd.bindings.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            if (_Parameter.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parameter.get(idx5 ++)), "Parameter");
            } else {
                idx5 += 1;
            }
        }
        while (idx1 != len1) {
            if (_StateVariable.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StateVariable.get(idx1 ++)), "StateVariable");
            } else {
                idx1 += 1;
            }
        }
        while (idx4 != len4) {
            if (_Event.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Event.get(idx4 ++)), "Event");
            } else {
                idx4 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (simkit.xsd.bindings.SimkitModuleType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u001a\u001a\u0085\u00a3ppsq\u0000~\u0000\u0000\u0016\u00a1\u00e4 ppsq\u0000~\u0000\u0000\u0014"
+"\u0007toppsq\u0000~\u0000\u0000\r\u00ba[sppsq\u0000~\u0000\u0000\u0007\u00ed\u009ccppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u0089\u00e0\u00d2ppsr\u0000 com.sun.msv.grammar.OneOrMoreEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0089\u00e0\u00c7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0089\u00e0\u00c4q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0002\u0089\u00e0\u00b9ppsr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003\u0000t\u007f\u00b2ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000"
+"\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000\"q\u0000~\u0000!sq\u0000~\u0000\n\u0002\u0015a\u0002ppsr\u0000 com.sun.ms"
+"v.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000"
+"\u0012xq\u0000~\u0000\u0003\u0002\u0015`\u00f7q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001\u009du\u00feppsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0005QNamesr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000\'sq\u0000~"
+"\u0000(q\u0000~\u00000q\u0000~\u0000!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.gramm"
+"ar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XM"
+"LSchema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u00004t\u0000\u0007Commentt\u0000\u0000q\u0000~\u0000"
+":sq\u0000~\u0000\n\u0005c\u00bb\u008cppsq\u0000~\u0000\f\u0005c\u00bb\u0081q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0005c\u00bb~q\u0000~\u0000\u0010psq\u0000~\u0000\u0011\u0001\u0095\u00dd}q\u0000~\u0000\u0010"
+"p\u0000sq\u0000~\u0000\n\u0001\u0095\u00ddrppsq\u0000~\u0000\f\u0001\u0095\u00ddgq\u0000~\u0000\u0010psq\u0000~\u0000+\u0001\u0095\u00dddq\u0000~\u0000\u0010psr\u00002com.sun.ms"
+"v.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000"
+"\bq\u0000~\u0000;psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005"
+"q\u0000~\u0000:sq\u0000~\u00004t\u0000\u001dsimkit.xsd.bindings.Parametert\u0000+http://java.su"
+"n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0011\u0003\u00cd\u00dd\u00ffq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0003\u00cd\u00dd\u00f4ppsq"
+"\u0000~\u0000\u0011\u0001\u0095\u00dd}pp\u0000sq\u0000~\u0000\n\u0001\u0095\u00ddrppsq\u0000~\u0000\f\u0001\u0095\u00ddgq\u0000~\u0000\u0010psq\u0000~\u0000+\u0001\u0095\u00dddq\u0000~\u0000\u0010pq\u0000~\u0000G"
+"q\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000!simkit.xsd.bindings.ParameterTypeq\u0000~\u0000Lsq\u0000"
+"~\u0000\n\u00028\u0000rppsq\u0000~\u0000+\u00028\u0000gq\u0000~\u0000\u0010pq\u0000~\u0000-sq\u0000~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\t"
+"Parameterq\u0000~\u0000>q\u0000~\u0000:sq\u0000~\u0000\n\u0005\u00cc\u00bf\u000bppsq\u0000~\u0000\f\u0005\u00cc\u00bf\u0000q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0005\u00cc\u00be\u00fdq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\u0011\u0001\u0095\u00dd}q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u0001\u0095\u00ddrppsq\u0000~\u0000\f\u0001\u0095\u00ddgq\u0000~\u0000\u0010psq\u0000~\u0000+\u0001\u0095\u00dddq\u0000"
+"~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000!simkit.xsd.bindings.StateVariabl"
+"eq\u0000~\u0000Lsq\u0000~\u0000\u0011\u00046\u00e1~q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u00046\u00e1sppsq\u0000~\u0000\u0011\u0001\u0095\u00dd}pp\u0000sq\u0000~\u0000\n\u0001\u0095\u00ddrpp"
+"sq\u0000~\u0000\f\u0001\u0095\u00ddgq\u0000~\u0000\u0010psq\u0000~\u0000+\u0001\u0095\u00dddq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000%simk"
+"it.xsd.bindings.StateVariableTypeq\u0000~\u0000Lsq\u0000~\u0000\n\u0002\u00a1\u0003\u00f1ppsq\u0000~\u0000+\u0002\u00a1\u0003\u00e6"
+"q\u0000~\u0000\u0010pq\u0000~\u0000-sq\u0000~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\rStateVariableq\u0000~\u0000>q"
+"\u0000~\u0000:sq\u0000~\u0000\f\u0006M\u0018\u00f7ppsq\u0000~\u0000\n\u0006M\u0018\u00f4ppsq\u0000~\u0000\u0011\u0001\u0095\u00dd}pp\u0000sq\u0000~\u0000\n\u0001\u0095\u00ddrppsq\u0000~\u0000\f\u0001"
+"\u0095\u00ddgq\u0000~\u0000\u0010psq\u0000~\u0000+\u0001\u0095\u00dddq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~\u00004t\u0000\u0019simkit.xsd."
+"bindings.Eventq\u0000~\u0000Lsq\u0000~\u0000\u0011\u0004\u00b7;upp\u0000sq\u0000~\u0000\u0000\u0004\u00b7;jppsq\u0000~\u0000\u0011\u0001\u0095\u00dd}pp\u0000sq\u0000"
+"~\u0000\n\u0001\u0095\u00ddrppsq\u0000~\u0000\f\u0001\u0095\u00ddgq\u0000~\u0000\u0010psq\u0000~\u0000+\u0001\u0095\u00dddq\u0000~\u0000\u0010pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u0000:sq\u0000~"
+"\u00004t\u0000\u001dsimkit.xsd.bindings.EventTypeq\u0000~\u0000Lsq\u0000~\u0000\n\u0003!]\u00e8ppsq\u0000~\u0000+\u0003!]"
+"\u00ddq\u0000~\u0000\u0010pq\u0000~\u0000-sq\u0000~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\u0005Eventq\u0000~\u0000>sq\u0000~\u0000+\u0002\u009a"
+"o\u00acppsq\u0000~\u0000\u0016\u0001\u008a\u008c\u00f2ppsr\u0000%com.sun.msv.datatype.xsd.SimpleURType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\ranySimpleTypeq\u0000~\u0000%q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u0000\u0089q\u0000~\u0000"
+"!sq\u0000~\u00004t\u0000\u0007versionq\u0000~\u0000>sq\u0000~\u0000+\u0003x\u00a1~ppq\u0000~\u0000\u0086sq\u0000~\u00004t\u0000\u0004nameq\u0000~\u0000>sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0000\u0091[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u0000#\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppq\u0000~\u0000*pppp"
+"pppppppppppppppppq\u0000~\u0000\u0080q\u0000~\u0000kpppq\u0000~\u0000\u0006q\u0000~\u0000\u0015q\u0000~\u0000Appq\u0000~\u0000@pppppppp"
+"pq\u0000~\u0000\u000eq\u0000~\u0000?ppq\u0000~\u0000\u0007ppppppq\u0000~\u0000\u000bppppppq\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000_q\u0000~\u0000gq\u0000~\u0000t"
+"q\u0000~\u0000|pppppq\u0000~\u0000Cq\u0000~\u0000Pq\u0000~\u0000^q\u0000~\u0000fq\u0000~\u0000sq\u0000~\u0000{pppppppppq\u0000~\u0000Nppppq\u0000"
+"~\u0000qq\u0000~\u0000\\pq\u0000~\u0000pq\u0000~\u0000[pppq\u0000~\u0000\bpppppq\u0000~\u0000\u0005q\u0000~\u0000Zpppppppppppppppppp"
+"pppppppppppppppq\u0000~\u0000\tpppppppq\u0000~\u0000yq\u0000~\u0000dpq\u0000~\u0000U"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends simkit.xsd.bindings.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(simkit.xsd.bindings.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return simkit.xsd.bindings.impl.SimkitModuleTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        if (("Event" == ___local)&&("" == ___uri)) {
                            _Event.add(((simkit.xsd.bindings.impl.EventImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.EventImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Event" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  13 :
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            _StateVariable.add(((simkit.xsd.bindings.impl.StateVariableImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateVariableImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        if (("Event" == ___local)&&("" == ___uri)) {
                            _Event.add(((simkit.xsd.bindings.impl.EventImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.EventImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Event" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            _Parameter.add(((simkit.xsd.bindings.impl.ParameterImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ParameterImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            _StateVariable.add(((simkit.xsd.bindings.impl.StateVariableImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.StateVariableImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  9 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            _Parameter.add(((simkit.xsd.bindings.impl.ParameterImpl) spawnChildFromEnterElement((simkit.xsd.bindings.impl.ParameterImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  14 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Version = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  8 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("StateVariable" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  17 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  15 :
                        if (("Event" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  11 :
                        if (("Parameter" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  17 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _StateVariable.add(((simkit.xsd.bindings.impl.StateVariableTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.StateVariableTypeImpl.class), 18, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  10 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _Parameter.add(((simkit.xsd.bindings.impl.ParameterTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.ParameterTypeImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  14 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Event.add(((simkit.xsd.bindings.impl.EventTypeImpl) spawnChildFromEnterAttribute((simkit.xsd.bindings.impl.EventTypeImpl.class), 15, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  16 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            state = 13;
                            continue outer;
                        case  17 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  14 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  7 :
                            eatText3(value);
                            state = 8;
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment.add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
